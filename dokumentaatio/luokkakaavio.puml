@startuml

package cx.corp.lacuna.core.domain {
    class NativeProcess
}

package cx.corp.lacuna.core {
    interface MemoryReader {
        {abstract} read(NativeProcess, int, int) : byte[]
    }
    interface NativeProcessEnumerator {
        {abstract} getProcesses() : List<NativeProcess>
    }
    
    MemoryReader ..>  "1" NativeProcess : uses
    NativeProcessEnumerator ..> "0..*" NativeProcess : creates
}

package cx.corp.lacuna.core.windows {

    package cx.corp.lacuna.core.windows.winapi {
        interface Kernel32
        interface Advapi32
        interface Psapi
        class WinApiPidEnumerator
        class WinApiProcessDescriptionGetter
        class WinApiProcessOpener
        class WinApiProcessOwnerGetter
    }
    
    interface NativeProcessCollector {
        {abstract} NativeProcess collect(int)
    }
    interface PidEnumerator {
        {abstract} getPids() : IntStream
    }
    interface ProcessDescriptionGetter {
        {abstract} get(ProcessHandle) : Optional<String>
    }
    interface ProcessOwnerGetter {
        {abstract} get(ProcessHandle) : Optional<String>
    }
    interface ProcessHandle <<AutoCloseable>> {
        {abstract} getNativeHandle() : int
    }
    interface ProcessOpener {
        open(int, int) : ProcessHandle
    }
    

    class WindowsNativeProcessEnumerator
    class WindowsNativeProcessCollector
    class WindowsMemoryReader
    
    NativeProcessEnumerator <|.. WindowsNativeProcessEnumerator
    WindowsNativeProcessEnumerator --> "1" PidEnumerator
    WindowsNativeProcessEnumerator --> "1" NativeProcessCollector
    
    NativeProcessCollector <|.. WindowsNativeProcessCollector
     
    WindowsNativeProcessCollector --> "1" ProcessOpener
    WindowsNativeProcessCollector --> "1" ProcessOwnerGetter
    WindowsNativeProcessCollector --> "1" ProcessDescriptionGetter
    
    ProcessOpener ..> "1" ProcessHandle : creates
    ProcessOwnerGetter ..> "1" ProcessHandle : uses
    ProcessDescriptionGetter ..> "1" ProcessHandle : uses

    
    PidEnumerator <|.. WinApiPidEnumerator
    WinApiPidEnumerator --> "1" Psapi
    
    ProcessOpener <|.. WinApiProcessOpener
    ProcessOwnerGetter <|.. WinApiProcessOwnerGetter
    ProcessDescriptionGetter <|.. WinApiProcessDescriptionGetter
    
    WinApiProcessOpener --> "1" Kernel32
    WinApiProcessDescriptionGetter --> "1" Kernel32
    WinApiProcessOwnerGetter --> "1" Advapi32
    
    
    MemoryReader <|.. WindowsMemoryReader
    WindowsMemoryReader --> "1" Kernel32
}

package cx.corp.lacuna.core.linux {
    interface MemoryProvider {
        {abstract} open(NativeProcess) : InputStream
    }
    class LinuxNativeProcessEnumerator
    class LinuxMemoryReader
    class ProcFileFilter
    class FileMemoryProvider
    
    NativeProcessEnumerator <|.. LinuxNativeProcessEnumerator
    LinuxNativeProcessEnumerator *-- "1" ProcFileFilter
    
    MemoryProvider ..> "1" NativeProcess : uses
    MemoryProvider <|.. FileMemoryProvider
    
    MemoryReader <|.. LinuxMemoryReader
    LinuxMemoryReader --> "1" MemoryProvider
}

@enduml
